{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Parameters" : {
    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern" : "[\\x20-\\x7E]*",
      "ConstraintDescription" : "can contain only ASCII characters.",
      "Default": "scalax"
    }
  },
  "Resources" : {
    "vpc" : {
       "Type" : "AWS::EC2::VPC",
       "Properties" : {
          "CidrBlock" : "10.0.0.0/16",
          "EnableDnsSupport" : "true",
          "EnableDnsHostnames" : "true",
          "InstanceTenancy" : "default",
          "Tags" : [ {"Key" : "Name", "Value" : "responsive-vpc"} ]
       }
    },
    "internetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [ {"Key" : "Name", "Value" : "responsive-internet-gateway"} ]
      }
    },
    "vpcGatewayAttachment" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "vpc" },
         "InternetGatewayId" : { "Ref" : "internetGateway" }
       }
    },
    "subnet" : {
       "Type" : "AWS::EC2::Subnet",
       "Properties" : {
          "VpcId" : { "Ref" : "vpc" },
          "CidrBlock" : "10.0.0.0/16",
          "AvailabilityZone" : "eu-west-1a",
          "Tags" : [ { "Key" : "Name", "Value" : "responsive-subnet" } ]
       }
    },
    "routeTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "vpc" },
        "Tags" : [ { "Key" : "Name", "Value" : "responsive-route-table" } ]
      }
    },
    "routeToInternet" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "vpcGatewayAttachment",
      "Properties" : {
        "RouteTableId" : { "Ref" : "routeTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "internetGateway" }
      }
    },
    "subnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "subnet" },
        "RouteTableId" : { "Ref" : "routeTable" }
      }
    },
    "appSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Allow access on 8080 from within the vpc",
        "VpcId" : { "Ref" : "vpc" },
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "CidrIp" : "0.0.0.0/0", "FromPort" : "22",  "ToPort" : "22" },
          { "IpProtocol" : "tcp", "CidrIp" : "10.0.0.0/16", "FromPort" : "8080",  "ToPort" : "8080" }
        ],
        "SecurityGroupEgress" : [
          { "IpProtocol" : "-1", "CidrIp" : "0.0.0.0/0", "FromPort" : "0", "ToPort" : "65535" }
        ],
        "Tags" : [ { "Key" : "Name", "Value" : "responsive-app-security-group" } ]
      }
    },
    "appInstance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "ImageId" : "ami-bff32ccc",
        "InstanceType": "t2.micro",
        "KeyName" : { "Ref" : "KeyName" },
        "NetworkInterfaces": [ {
          "AssociatePublicIpAddress": "true",
          "DeviceIndex": "0",
          "GroupSet": [{ "Ref" : "appSecurityGroup" }],
          "SubnetId": { "Ref" : "subnet" }
        } ],
        "Tags" : [ { "Key" : "Name", "Value" : "responsive-app-instance" } ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["\n", [
          "#!/bin/bash",
          "yum install -y git",
          "curl https://bintray.com/sbt/rpm/rpm | tee /etc/yum.repos.d/bintray-sbt-rpm.repo",
          "yum install -y sbt",
          "useradd --create-home --system akkahttp",
          "mkdir -p /opt/akkahttp",
          "chown akkahttp:akkahttp /opt/akkahttp",
          "su akkahttp <<EOF",
          "cd /opt/akkahttp",
          "git clone https://github.com/mattroberts297/scalax.git .",
          "git checkout responsive",
          "nohup sbt run &",
          "EOF"
        ]]}}
      }
    },
    "elbSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Allow all access on 80 from the internet",
        "VpcId" : { "Ref" : "vpc" },
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "CidrIp" : "0.0.0.0/0", "FromPort" : "80",  "ToPort" : "80" }
        ],
        "SecurityGroupEgress" : [
          { "IpProtocol" : "-1", "CidrIp" : "0.0.0.0/0", "FromPort" : "0", "ToPort" : "65535" }
        ],
        "Tags" : [ { "Key" : "Name", "Value" : "responsive-elb-security-group" } ]
      }
    },
    "elb" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
        "SecurityGroups" : [{ "Ref" : "elbSecurityGroup" }],
        "Subnets" : [ { "Ref" : "subnet" } ],
        "Instances" : [ { "Ref" : "appInstance" } ],
        "Listeners" : [ {
          "LoadBalancerPort" : "80",
          "InstancePort" : "8080",
          "Protocol" : "HTTP"
        } ],
        "Tags" : [ { "Key" : "Name", "Value" : "responsive-elb" } ]
      }
    }
  }
}