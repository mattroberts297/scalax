{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Parameters" : {
    "keyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern" : "[\\x20-\\x7E]*",
      "ConstraintDescription" : "can contain only ASCII characters.",
      "Default": "scalax"
    },
    "rdsPassword": {
      "Description" : "The RDS password to use",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "255",
      "Default": "EFEB6985FF7599461334E44E8E67458"
    }
  },
  "Resources" : {
    "vpc" : {
       "Type" : "AWS::EC2::VPC",
       "Properties" : {
          "CidrBlock" : "10.0.0.0/16",
          "EnableDnsSupport" : "true",
          "EnableDnsHostnames" : "true",
          "InstanceTenancy" : "default",
          "Tags" : [ {"Key" : "Name", "Value" : "resilient-vpc"} ]
       }
    },
    "internetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [ {"Key" : "Name", "Value" : "resilient-internet-gateway"} ]
      }
    },
    "vpcGatewayAttachment" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "vpc" },
         "InternetGatewayId" : { "Ref" : "internetGateway" }
       }
    },
    "subnetA" : {
       "Type" : "AWS::EC2::Subnet",
       "Properties" : {
          "VpcId" : { "Ref" : "vpc" },
          "CidrBlock" : "10.0.0.0/17",
          "AvailabilityZone" : "eu-west-1a",
          "Tags" : [ { "Key" : "Name", "Value" : "resilient-subnet-a" } ]
       }
    },
    "subnetB" : {
       "Type" : "AWS::EC2::Subnet",
       "Properties" : {
          "VpcId" : { "Ref" : "vpc" },
          "CidrBlock" : "10.0.128.0/17",
          "AvailabilityZone" : "eu-west-1b",
          "Tags" : [ { "Key" : "Name", "Value" : "resilient-subnet-b" } ]
       }
    },
    "routeTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "vpc" },
        "Tags" : [ { "Key" : "Name", "Value" : "resilient-route-table" } ]
      }
    },
    "routeToInternet" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "vpcGatewayAttachment",
      "Properties" : {
        "RouteTableId" : { "Ref" : "routeTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "internetGateway" }
      }
    },
    "subnetRouteTableAssociationA" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "subnetA" },
        "RouteTableId" : { "Ref" : "routeTable" }
      }
    },
    "subnetRouteTableAssociationB" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "subnetB" },
        "RouteTableId" : { "Ref" : "routeTable" }
      }
    },
    "appSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Allow access on 8080 from within the elb",
        "VpcId" : { "Ref" : "vpc" },
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "8080",  "ToPort" : "8080", "SourceSecurityGroupId" : { "Ref" : "elbSecurityGroup" } },
          { "IpProtocol" : "tcp", "CidrIp" : "0.0.0.0/0", "FromPort" : "22", "ToPort" : "22" }
        ],
        "SecurityGroupEgress" : [
          { "IpProtocol" : "-1", "CidrIp" : "0.0.0.0/0", "FromPort" : "0", "ToPort" : "65535" }
        ],
        "Tags" : [ { "Key" : "Name", "Value" : "resilient-app-security-group" } ]
      }
    },
    "appInstanceA" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "ImageId" : "ami-7aad7509",
        "InstanceType": "t2.micro",
        "KeyName" : { "Ref" : "keyName" },
        "NetworkInterfaces": [ {
          "AssociatePublicIpAddress": "true",
          "DeviceIndex": "0",
          "GroupSet": [{ "Ref" : "appSecurityGroup" }],
          "SubnetId": { "Ref" : "subnetA" }
        } ],
        "Tags" : [ { "Key" : "Name", "Value" : "resilient-app-instance-a" } ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : [ "\n", [
          "#!/bin/bash",
          "su akkahttp <<EOU",
          "cd /opt/akkahttp",
          "cat >> conf/application.conf <<EOF",
          "org.scalax.reactive.db {",
          "  dataSourceClass = \"org.postgresql.ds.PGSimpleDataSource\"",
          "  properties = {",
          { "Fn::Join" : [ "", [ "    url = \"jdbc:postgresql://", { "Fn::GetAtt" : ["database", "Endpoint.Address"] }, ":", { "Fn::GetAtt" : ["database", "Endpoint.Port"] }, "/reactive\"" ] ] },
          "    user = \"reactiveapp\"",
          { "Fn::Join" : [ "", [ "    password = \"", { "Ref" : "rdsPassword" }, "\"" ] ] },
          "  }",
          "}",
          "org.scalax.reactive.memcached {",
          { "Fn::Join" : [ "", [ "  addresses = \"", { "Fn::GetAtt" : ["cache", "ConfigurationEndpoint.Address"] }, ":", { "Fn::GetAtt" : ["cache", "ConfigurationEndpoint.Port"] }, "\"" ] ] },
          "}",
          "EOF",
          "cd bin",
          "nohup ./akka-http-example &",
          "EOU"
        ]]}}
      }
    },
    "appInstanceB" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "ImageId" : "ami-7aad7509",
        "InstanceType": "t2.micro",
        "KeyName" : { "Ref" : "keyName" },
        "NetworkInterfaces": [ {
          "AssociatePublicIpAddress": "true",
          "DeviceIndex": "0",
          "GroupSet": [{ "Ref" : "appSecurityGroup" }],
          "SubnetId": { "Ref" : "subnetB" }
        } ],
        "Tags" : [ { "Key" : "Name", "Value" : "resilient-app-instance-b" } ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : [ "\n", [
          "#!/bin/bash",
          "su akkahttp <<EOU",
          "cd /opt/akkahttp",
          "cat >> conf/application.conf <<EOF",
          "org.scalax.reactive.db {",
          "  dataSourceClass = \"org.postgresql.ds.PGSimpleDataSource\"",
          "  properties = {",
          { "Fn::Join" : [ "", [ "    url = \"jdbc:postgresql://", { "Fn::GetAtt" : ["database", "Endpoint.Address"] }, ":", { "Fn::GetAtt" : ["database", "Endpoint.Port"] }, "/reactive\"" ] ] },
          "    user = \"reactiveapp\"",
          { "Fn::Join" : [ "", [ "    password = \"", { "Ref" : "rdsPassword" }, "\"" ] ] },
          "  }",
          "}",
          "org.scalax.reactive.memcached {",
          { "Fn::Join" : [ "", [ "  addresses = \"", { "Fn::GetAtt" : ["cache", "ConfigurationEndpoint.Address"] }, ":", { "Fn::GetAtt" : ["cache", "ConfigurationEndpoint.Port"] }, "\"" ] ] },
          "}",
          "EOF",
          "cd bin",
          "nohup ./akka-http-example &",
          "EOU"
        ]]}}
      }
    },
    "elbSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Allow all access on 80 from the internet",
        "VpcId" : { "Ref" : "vpc" },
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "CidrIp" : "0.0.0.0/0", "FromPort" : "80",  "ToPort" : "80" }
        ],
        "SecurityGroupEgress" : [
          { "IpProtocol" : "-1", "CidrIp" : "0.0.0.0/0", "FromPort" : "0", "ToPort" : "65535" }
        ],
        "Tags" : [ { "Key" : "Name", "Value" : "resilient-elb-security-group" } ]
      }
    },
    "elb" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
        "SecurityGroups" : [{ "Ref" : "elbSecurityGroup" }],
        "Subnets" : [ { "Ref" : "subnetA" }, { "Ref" : "subnetB" } ],
        "Instances" : [ { "Ref" : "appInstanceA" } , { "Ref" : "appInstanceB" } ],
        "Listeners" : [ {
          "LoadBalancerPort" : "80",
          "InstancePort" : "8080",
          "Protocol" : "HTTP"
        } ],
        "HealthCheck" : {
          "Target" : "HTTP:8080/patients",
          "HealthyThreshold" : "2",
          "UnhealthyThreshold" : "6",
          "Interval" : "300",
          "Timeout" : "5"
        },
        "Tags" : [ { "Key" : "Name", "Value" : "resilient-elb" } ]
      }
    },
    "databaseSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "database-security-group",
        "VpcId" : { "Ref" : "vpc" },
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "5432",  "ToPort" : "5432", "SourceSecurityGroupId" : { "Ref" : "appSecurityGroup" } }
        ],
        "Tags" : [ { "Key" : "Name", "Value" : "resilient-database-security-group" } ]
      }
    },
    "databaseSubnetGroup": {
       "Type" : "AWS::RDS::DBSubnetGroup",
       "Properties" : {
          "DBSubnetGroupDescription" : "resilient-database-subnet-group",
          "SubnetIds" : [ { "Ref" : "subnetA" }, { "Ref" : "subnetB" } ],
          "Tags" : [ { "Key" : "Name", "Value" : "resilient-database-subnet-group" } ]
       }
    },
    "database" : {
      "DeletionPolicy" : "Delete",
      "Type" : "AWS::RDS::DBInstance",
      "Properties" :
      {
        "AllocatedStorage" : "32",
        "AllowMajorVersionUpgrade" : false,
        "AutoMinorVersionUpgrade" : true,
        "BackupRetentionPeriod" : "7",
        "DBInstanceClass" : "db.t2.micro",
        "DBInstanceIdentifier" : "resilient-database-instance",
        "DBName" : "reactive",
        "DBSubnetGroupName" : { "Ref" : "databaseSubnetGroup" },
        "Engine" : "postgres",
        "EngineVersion" : "9.4.1",
        "MasterUsername" : "reactiveapp",
        "MasterUserPassword" : { "Ref" : "rdsPassword" },
        "MultiAZ" : true,
        "PreferredBackupWindow" : "04:00-04:30",
        "PreferredMaintenanceWindow" : "Mon:05:00-Mon:05:30",
        "PubliclyAccessible" : false,
        "StorageType" : "standard",
        "Tags" : [ { "Key" : "Name", "Value" : "resilient-database-instance" } ],
        "VPCSecurityGroups" : [ { "Ref" : "databaseSecurityGroup" } ]
      }
    },
    "cacheSubnetGroup" : {
      "Type" : "AWS::ElastiCache::SubnetGroup",
      "Properties" : {
        "Description" : "Cache Subnet Group",
        "SubnetIds" : [ { "Ref" : "subnetA" }, { "Ref" : "subnetB" } ]
      }
    },
    "cacheSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "cache-security-group",
        "VpcId" : { "Ref" : "vpc" },
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "11211",  "ToPort" : "11211", "SourceSecurityGroupId" : { "Ref" : "appSecurityGroup" } }
        ],
        "Tags" : [ { "Key" : "Name", "Value" : "resilient-cache-security-group" } ]
      }
    },
    "cacheCluster": {
      "Type": "AWS::ElastiCache::CacheCluster",
      "Properties": {
        "AutoMinorVersionUpgrade": "true",
        "AZMode": "cross-az",
        "CacheNodeType": "cache.t2.micro",
        "CacheSubnetGroupName": { "Ref" : "cacheSubnetGroup" },
        "ClusterName": "resilient-cache-cluster",
        "Engine": "memcached",
        "NumCacheNodes": "2",
        "VpcSecurityGroupIds": [{"Fn::GetAtt": [ "cacheSecurityGroup", "GroupId"]}]
      }
    }
  }
}